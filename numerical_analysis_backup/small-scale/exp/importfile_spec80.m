function [res] = importfile_spec80(filename, num_pods, num_cores, num_specs)
%IMPORTFILE1 Import numeric data from a text file as a matrix.
%   TEST5 = IMPORTFILE1(FILENAME) Reads data from text file FILENAME for
%   the default selection.
%
%   TEST5 = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   test5 = importfile1('test5.csv', 1, 603);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/07/02 16:39:44

startRow = 1;
endRow = inf;

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
tmpstr = '%s';
formatSpec = repmat(tmpstr, 1, num_specs);
formatSpec = strcat(formatSpec, '%[^\n\r]');
% formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
delimiter = ',';
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end

raw = raw(4:end, :);
res = zeros(size(raw));
for col=1:num_specs
    for row=1:num_cores*num_pods
        res(row, col) = str2num(raw{row, col});
    end
end

% res = logical(res);
